name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Build with Maven
      run: |
        mvn clean install -DskipTests
        mvn package -DskipTests -Dmaven.repo.local=./.m2/
      env:
        CI_COMMIT_SHORT_SHA: ${{ github.sha }}

  sast:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Include your SAST tools here. This example uses a placeholder for SAST analysis.
    - name: Run SAST Analysis
      run: echo "Running SAST Analysis"

  push:
    needs: build
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
    - uses: actions/checkout@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      run: |
        export DOCKER_BUILDKIT=0
        cd webgoat-server
        docker build --build-arg webgoat_version=v8.1.0 --tag ${{ secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }} --tag ${{ secrets.DOCKER_USERNAME }}/webgoat:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/webgoat:latest

  # push:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       path: 'webgoat-server'

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1

  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }} # Set in GitHub repo secrets
  #       password: ${{ secrets.DOCKER_PASSWORD }} # Set in GitHub repo secrets

  #   - name: Pull latest image or skip
  #     run: docker pull ${{ secrets.DOCKER_USERNAME }}/webgoat:latest || true

  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: webgoat-server
  #       file: webgoat-server/Dockerfile
  #       push: true
  #       tags: |
  #         ${{ secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }}
  #         ${{ secrets.DOCKER_USERNAME }}/webgoat:latest
  #       build-args: |
  #         webgoat_version=v8.1.0

  # push:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   services:
  #     docker:
  #       image: docker:19.03.12
  #       options: --privileged
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Log in to Docker Hub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: ./webgoat-server  # Set the build context to the directory of the Dockerfile
  #       file: ./webgoat-server/Dockerfile  # Specify the path to the Dockerfile
  #       push: true
  #       tags: |
  #         ${{ secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }}
  #         ${{ secrets.DOCKER_USERNAME }}/webgoat:latest
  #       build-args: |
  #         webgoat_version=v8.1.0


  dast:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://webgoat:8080/WebGoat/'
