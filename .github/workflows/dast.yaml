name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  sast:
    # needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Run SAST Analysis
      run: echo "Running SAST Analysis"
    # - uses: actions/checkout@v2
    # # Include your SAST tools here. This example uses a placeholder for SAST analysis.
    - name: Checking out
      uses: actions/checkout@v2
    # - uses: AppThreat/sast-scan-action@master
    #   with:
    #    type: "python"

    # - uses: actions/upload-artifact@v1
    #   with:
    #    name: reports
    #    path: reports
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
       args: >
        -X
        -Dsonar.verbose=true      
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: 'https://7f73-103-178-58-117.ngrok-free.app'
        
  build:
    name: Build Project
    needs: sast
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Build with Maven
      run: |
        mvn clean install -DskipTests
        mvn package -DskipTests -Dmaven.repo.local=./.m2/
      env:
        CI_COMMIT_SHORT_SHA: ${{ github.sha }}
        
  accuknox-cicd:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main  
     
      - name: Run AccuKnox CSPM Scan
        uses: accuknox/container-scan-action@v0.0.1
        with:
          token: ${{ secrets.TOKEN }} 
          tenant_id: ${{ secrets.TENANT_ID }}
          repository_name: ${{ github.repository }}
          dockerfile_context: webgoat-server/Dockerfile
          
  push:
    needs: accuknox-cicd
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
    - uses: actions/checkout@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      run: |
        cd webgoat-server
        export DOCKER_BUILDKIT=0
        docker build --build-arg webgoat_version=v8.1.0 --tag ${{ secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }} --tag ${{ secrets.DOCKER_USERNAME }}/webgoat:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/webgoat:latest
  

  dast:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://webgoat:8080/WebGoat/'
